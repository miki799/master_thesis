customRules:
  custom-rules.yaml: |
    - rule: Detect Find Command Searching for crt or key files
      desc: Detects the use of the find command looking for files with .crt or .key extensions
      condition: >
        spawned_process and
        proc.name = "find" and
        (proc.args contains ".crt" or proc.args contains ".key")
      output: >
        Find command used to search for .crt or .key files (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [security, command_execution]

    - rule: Detect Editing/reading on crt or key files
      desc: Detects attempts to open files with .crt or .key extensions for writing or reading
      condition: >
        (open_write or open_read) and
        (fd.name endswith ".crt" or fd.name endswith ".key")
      output: >
        Detected access to a .crt or .key file for editing (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [security, file_access]

    - rule: Detect reading environment variables
      desc: Detects when an application reads an environment variable named 'env'
      condition: >
        open_read and
        fd.name = "/proc/self/environ"
      output: >
        Detected reading of environment variable 'env' command (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [security, file_access]

    - rule: Detect Usage of 'env' command in Shell Commands
      desc: Detects when the 'env' environment variable is used in shell commands
      condition: >
        spawned_process and
        proc.name = "env"
      output: >
        Detected usage of 'env' command (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [security, command_execution]

    - rule: Detect Read/Modification of index.html file
      desc: Detects when the index.html file is modified
      condition: >
        (open_write or open_read) and
        fd.name = "/usr/share/nginx/html/index.html"
      output: >
        Detected read/modification of index.html file (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [security, file_access]

    - rule: Detect Read/Modification of rce_app.py File
      desc: Detects when the rce_app.py file is modified
      condition: >
        (open_write or open_read) and
        fd.name = "/app/rce_app.py"
      output: >
        Detected read/modification of rce_app.py file (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [security, file_access]

    # - rule: Detect Find Command Searching for Token files
    #   desc: Detects the use of the find command looking for files with names containing "token"
    #   condition: >
    #     spawned_process and
    #     proc.name = "find" and
    #     proc.args contains "token"
    #   output: >
    #     Find command used to search for token files (user=%user.name command=%proc.cmdline)
    #   priority: WARNING
    #   tags: [security, command_execution]

    # - rule: Detect Editing Token Files
    #   desc: Detects attempts to open files with names containing "token" for writing or reading
    #   condition: >
    #     (open_write or open_read) and
    #     fd.name contains "token"
    #   output: >
    #     Detected access to a token file for editing (user=%user.name command=%proc.cmdline file=%fd.name)
    #   priority: WARNING
    #   tags: [security, file_access]
